version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: contents
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d contents || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  content-api:
    build: ../app-webtoon/services/content-api
    environment:
      - GIT_REV=local
      - TZ=UTC
      - DATABASE_URL=postgresql+psycopg2://postgres:dev@postgres:5432/contents
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  ingestion:
    build: ../app-webtoon/services/ingestion
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/contents
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=dev
      - INGEST_DIR=/data
      - TZ=UTC
    volumes:
      - ./data/ingestion:/data:ro
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
  redisdata: