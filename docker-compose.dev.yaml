version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: contents
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dev
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d contents || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  content-api:
    build: ../app-webtoon/services/content-api
    environment:
      - GIT_REV=local
      - TZ=UTC
      - DATABASE_URL=postgresql+psycopg2://postgres:dev@postgres:5432/contents
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  ingestion:
    build: ../app-webtoon/services/ingestion
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/contents
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=dev
      - INGEST_DIR=/data
      - TZ=UTC
    volumes:
      - ./data/ingestion:/data:ro
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector:0.98.0
    volumes:
      - "./obs/otel-collector.yaml:/etc/otelcol/config.yaml:ro"
    ports:
      - "4317:4317"
      - "4318:4318"
      - "9464:9464"

  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - "./obs/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "./obs/alerts.yml:/etc/prometheus/alerts.yml:ro"
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.9.8
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - "./obs/loki-config.yaml:/etc/loki/local-config.yaml:ro"
    ports:
      - "3100:3100"

  tempo:
    image: grafana/tempo:2.6.0
    volumes:
      - "./obs/tempo.yaml:/etc/tempo.yaml:ro"
    command: ["-config.file=/etc/tempo.yaml"]
    ports:
      - "3200:3200"

  grafana:
    image: grafana/grafana:11.1.0
    volumes:
      - "./obs/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/ds.yaml:ro"
      - "./obs/grafana/dashboards:/var/lib/grafana/dashboards"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Editor
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/app.json
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - tempo

volumes:
  pgdata:
  redisdata: